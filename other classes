static void ShowDetails(InventoryManager inventoryManager)
{
    Console.Clear();
    inventoryManager.DisplayInventory();
    Console.WriteLine("\nPress any key to return to the menu...");
    Console.ReadKey();
}

static void ShowBuyingDetails()
{
    Console.Clear();
    Console.WriteLine("Buying details functionality will go here.");
    Console.WriteLine("\nPress any key to return to the menu...");
    Console.ReadKey();
}

static void ShowSellingDetails(InventoryManager inventoryManager)
{
    Console.Clear();
    Console.Write("Enter item name or code to sell: ");
    string itemIdentifier = Console.ReadLine();
    InventoryItem item = inventoryManager.GetItemByNameOrCode(itemIdentifier);

    if (item != null)
    {
        Console.Write($"Enter quantity to sell (Available stock: {item.Quantity}): ");
        if (int.TryParse(Console.ReadLine(), out int quantity) && quantity <= item.Quantity)
        {
            inventoryManager.SellItem(item.ItemName, quantity);
            Console.WriteLine($"Sold {quantity} of {item.ItemName}. Remaining stock: {item.Quantity}");
        }
        else
        {
            Console.WriteLine("Invalid quantity or insufficient stock.");
        }
    }
    else
    {
        Console.WriteLine("Item not found.");
    }

    Console.WriteLine("\nPress any key to return to the menu...");
    Console.ReadKey();
}

static void ProfitLossData()
{
    Console.Clear();
    Console.WriteLine("Profit and loss data functionality will go here.");
    Console.WriteLine("\nPress any key to return to the menu...");
    Console.ReadKey();
}

static void ExitProgram()
{
    Console.Clear();
    Console.WriteLine("Are you sure you want to exit? Press Y to confirm, any other key to cancel.");
    var exitOption = Console.ReadKey(true).KeyChar;

    if (exitOption == 'Y' || exitOption == 'y')
    {
        Environment.Exit(0);
    }
    else
    {
        Console.WriteLine("\nReturning to the menu...");
        Console.ReadKey();
    }
}
